- To save opcode run trace to a text file , right click run trace window of debugger choose a text file.
view > Run trace
in Run trace window right click and select Log to file
choose a file name.
until you tracing your file will complete.
- You can also append to this log file , just do not forget to open this log every time at the beginning before the automation code execution 

- Then run the automation code gui_auto_for_ollydbg_final.py I decided to use gui automation strategy after seeing this  https://stackoverflow.com/questions/17771756/save-run-trace-in-ollydbg-1-10-using-odbgscript there are probably better ways to do this , but this worked well in my case.
Some exes might give unexpected errors to debugger, in that case you might need to rerun the script. There is counter in code that remembers the index of exe from one script execution to another.

- Automation code might work better with 32 - bit python interpreter , and IDE(pycharm) that starts this automation code execution must be in admistatrator mode.
 
- After all exes are processed you can parse run trace file by using parse_raw_dataset.py , this will save the final dataset to a csv.

- All other scripts will probably not be necessary in your case.  

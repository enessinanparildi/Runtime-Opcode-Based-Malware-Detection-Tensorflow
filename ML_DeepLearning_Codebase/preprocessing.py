import numpy as np
import pandas as pd
from collections import Counter


def extract_data(directory, mode):
    data = np.genfromtxt(directory, delimiter=",", dtype=np.int_)

    columndelete = np.all(data == -1, axis=0)
    rowsdelete = np.all(data == -1, axis=1)

    dataconv = data[:, np.logical_not(columndelete)]
    dataconv2 = dataconv[np.logical_not(rowsdelete), :]

    datalabels = pd.read_csv(directory, sep=',', usecols=[0])
    datalabels[datalabels.isnull()] = 'null'

    datalabels = datalabels.values.tolist()
    labelsclean = [labels[0] for labels in datalabels]


    # malware label 1
    # bening  label 0

    # mode = 0 sequence benign
    # mode = 1 sequence malware
    # mode = 2 frequency mixed
    # mode = 3 new benign

    if mode == 0:
        datalabels = np.zeros(len(labelsclean) + 1)
    elif mode == 1:
        datalabels = np.ones(len(labelsclean) + 1)
    elif mode == 3:
        return dataconv2[:, 1:], np.zeros(len(labelsclean) + 1)
    else:
        return dataconv2, labelsclean, set(list(labelsclean))

    return dataconv2, datalabels


def process_data(directory):
    data, datalabels = extract_data(directory, mode=2)

    uniquelabels = []

    labelfreq = datalabels[0][0]
    uniquelabels.append(labelfreq)

    freqnumberlabels = np.zeros(len(datalabels), dtype=np.int_)

    for i in range(0, len(datalabels) - 1):
        freqnumberlabels[i + 1] = freqnumberlabels[i]
        count = 0
        for labels in uniquelabels:
            if labels == datalabels[i + 1][0]:
                count = 0
                break
            else:
                count = count + 1
        if count == len(uniquelabels):
            print(count)
            print(i)
            uniquelabels.append(datalabels[i + 1][0])
            freqnumberlabels[i + 1] = freqnumberlabels[i] + 1
        labelfreq = datalabels[i + 1][0]

    classsizes = np.zeros(len(uniquelabels), dtype=np.int_)
    label = 0
    count = 0
    for ind, nums in enumerate(freqnumberlabels):
        if int(nums) == label:
            count = count + 1
        else:
            classsizes[int(label)] = count
            label = label + 1
            count = 1
        if ind == len(freqnumberlabels) - 1:
            classsizes[int(label)] = count

    return data, datalabels, freqnumberlabels, uniquelabels, classsizes


def process_data_v2(directory):
    data, datalabels, uniquelabels = extract_data(directory, mode=2)
    all_dict_class_sizes = dict(Counter(datalabels))
    freqnumberlabels = [list(uniquelabels).index(label) for label in datalabels]

    return data, datalabels, freqnumberlabels, uniquelabels, all_dict_class_sizes


if __name__ == "__main__":
    frequency_data_dir = "C:\\Users\\Ben\\Google Drive\\bigproject\\dataset\\all_malware_benign_master.csv"
    sequence_data_malware = "C:\\Users\\Ben\\Google Drive\\bigproject\\dataset\\markov_1k_malware_release.csv"
    sequence_data_benign = "C:\\Users\\Ben\\Google Drive\\bigproject\\dataset\\markov_1k_benign_release.csv"

    seqmalwaredata, seqmalwarelabels = extract_data(sequence_data_malware, mode=1)
    seqbenigndata, seqbenignlabels = extract_data(sequence_data_benign, mode=0)

    frequency_data, frequency_datalabels, frequency_numberlabels, uniquelabels, classsizes = process_data_v2(
        frequency_data_dir)
